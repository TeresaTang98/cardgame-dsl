/*
 * generated by Xtext 2.24.0
 */
grammar InternalCardGameLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.inf.cardgame.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.cardgame.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.cardgame.services.CardGameLanguageGrammarAccess;

}
@parser::members {
	private CardGameLanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(CardGameLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleCardGame
entryRuleCardGame
:
{ before(grammarAccess.getCardGameRule()); }
	 ruleCardGame
{ after(grammarAccess.getCardGameRule()); } 
	 EOF 
;

// Rule CardGame
ruleCardGame 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardGameAccess().getGroup()); }
		(rule__CardGame__Group__0)
		{ after(grammarAccess.getCardGameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCard
entryRuleCard
:
{ before(grammarAccess.getCardRule()); }
	 ruleCard
{ after(grammarAccess.getCardRule()); } 
	 EOF 
;

// Rule Card
ruleCard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardAccess().getGroup()); }
		(rule__Card__Group__0)
		{ after(grammarAccess.getCardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCardProperty
entryRuleCardProperty
:
{ before(grammarAccess.getCardPropertyRule()); }
	 ruleCardProperty
{ after(grammarAccess.getCardPropertyRule()); } 
	 EOF 
;

// Rule CardProperty
ruleCardProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardPropertyAccess().getGroup()); }
		(rule__CardProperty__Group__0)
		{ after(grammarAccess.getCardPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCardPropertyType
entryRuleCardPropertyType
:
{ before(grammarAccess.getCardPropertyTypeRule()); }
	 ruleCardPropertyType
{ after(grammarAccess.getCardPropertyTypeRule()); } 
	 EOF 
;

// Rule CardPropertyType
ruleCardPropertyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardPropertyTypeAccess().getNameAssignment()); }
		(rule__CardPropertyType__NameAssignment)
		{ after(grammarAccess.getCardPropertyTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGameRule
entryRuleGameRule
:
{ before(grammarAccess.getGameRuleRule()); }
	 ruleGameRule
{ after(grammarAccess.getGameRuleRule()); } 
	 EOF 
;

// Rule GameRule
ruleGameRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGameRuleAccess().getAlternatives()); }
		(rule__GameRule__Alternatives)
		{ after(grammarAccess.getGameRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleRule
entryRuleSingleRule
:
{ before(grammarAccess.getSingleRuleRule()); }
	 ruleSingleRule
{ after(grammarAccess.getSingleRuleRule()); } 
	 EOF 
;

// Rule SingleRule
ruleSingleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleRuleAccess().getGroup()); }
		(rule__SingleRule__Group__0)
		{ after(grammarAccess.getSingleRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualRule
entryRuleEqualRule
:
{ before(grammarAccess.getEqualRuleRule()); }
	 ruleEqualRule
{ after(grammarAccess.getEqualRuleRule()); } 
	 EOF 
;

// Rule EqualRule
ruleEqualRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualRuleAccess().getGroup()); }
		(rule__EqualRule__Group__0)
		{ after(grammarAccess.getEqualRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ExpressionKeyword
ruleExpressionKeyword
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionKeywordAccess().getAlternatives()); }
		(rule__ExpressionKeyword__Alternatives)
		{ after(grammarAccess.getExpressionKeywordAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PlayerRole
rulePlayerRole
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlayerRoleAccess().getAlternatives()); }
		(rule__PlayerRole__Alternatives)
		{ after(grammarAccess.getPlayerRoleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameRuleAccess().getSingleRuleParserRuleCall_0()); }
		ruleSingleRule
		{ after(grammarAccess.getGameRuleAccess().getSingleRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGameRuleAccess().getEqualRuleParserRuleCall_1()); }
		ruleEqualRule
		{ after(grammarAccess.getGameRuleAccess().getEqualRuleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionKeyword__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionKeywordAccess().getIsBiggerThanEnumLiteralDeclaration_0()); }
		('isBiggerThan')
		{ after(grammarAccess.getExpressionKeywordAccess().getIsBiggerThanEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionKeywordAccess().getIsSmallerThanEnumLiteralDeclaration_1()); }
		('isSmallerThan')
		{ after(grammarAccess.getExpressionKeywordAccess().getIsSmallerThanEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionKeywordAccess().getIsEqualToEnumLiteralDeclaration_2()); }
		('isEqualTo')
		{ after(grammarAccess.getExpressionKeywordAccess().getIsEqualToEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlayerRole__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlayerRoleAccess().getPlayerEnumLiteralDeclaration_0()); }
		('Player')
		{ after(grammarAccess.getPlayerRoleAccess().getPlayerEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlayerRoleAccess().getComputerEnumLiteralDeclaration_1()); }
		('Computer')
		{ after(grammarAccess.getPlayerRoleAccess().getComputerEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__0__Impl
	rule__CardGame__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getGameKeyword_0()); }
	'Game'
	{ after(grammarAccess.getCardGameAccess().getGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__1__Impl
	rule__CardGame__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getNameAssignment_1()); }
	(rule__CardGame__NameAssignment_1)
	{ after(grammarAccess.getCardGameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__2__Impl
	rule__CardGame__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getGroup_2()); }
	(rule__CardGame__Group_2__0)?
	{ after(grammarAccess.getCardGameAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__3__Impl
	rule__CardGame__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getCardsAssignment_3()); }
	(rule__CardGame__CardsAssignment_3)*
	{ after(grammarAccess.getCardGameAccess().getCardsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__4__Impl
	rule__CardGame__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getHoleCardNumberKeyword_4()); }
	'HoleCardNumber'
	{ after(grammarAccess.getCardGameAccess().getHoleCardNumberKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__5__Impl
	rule__CardGame__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getCardGameAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__6__Impl
	rule__CardGame__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getNumberAssignment_6()); }
	(rule__CardGame__NumberAssignment_6)
	{ after(grammarAccess.getCardGameAccess().getNumberAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__7__Impl
	rule__CardGame__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getCardGameAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getGroup_8()); }
	(rule__CardGame__Group_8__0)?
	{ after(grammarAccess.getCardGameAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardGame__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_2__0__Impl
	rule__CardGame__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getPropertiesKeyword_2_0()); }
	'Properties'
	{ after(grammarAccess.getCardGameAccess().getPropertiesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_2__1__Impl
	rule__CardGame__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getCardGameAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_2__2__Impl
	rule__CardGame__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getCardpropertytypesAssignment_2_2()); }
	(rule__CardGame__CardpropertytypesAssignment_2_2)
	{ after(grammarAccess.getCardGameAccess().getCardpropertytypesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_2__3__Impl
	rule__CardGame__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getGroup_2_3()); }
	(rule__CardGame__Group_2_3__0)*
	{ after(grammarAccess.getCardGameAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getCardGameAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardGame__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_2_3__0__Impl
	rule__CardGame__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getCardGameAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getCardpropertytypesAssignment_2_3_1()); }
	(rule__CardGame__CardpropertytypesAssignment_2_3_1)
	{ after(grammarAccess.getCardGameAccess().getCardpropertytypesAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardGame__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_8__0__Impl
	rule__CardGame__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getGameRuleKeyword_8_0()); }
	'GameRule'
	{ after(grammarAccess.getCardGameAccess().getGameRuleKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_8__1__Impl
	rule__CardGame__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getLeftCurlyBracketKeyword_8_1()); }
	'{'
	{ after(grammarAccess.getCardGameAccess().getLeftCurlyBracketKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_8__2__Impl
	rule__CardGame__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getRuleAssignment_8_2()); }
	(rule__CardGame__RuleAssignment_8_2)
	{ after(grammarAccess.getCardGameAccess().getRuleAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_8__3__Impl
	rule__CardGame__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getGroup_8_3()); }
	(rule__CardGame__Group_8_3__0)*
	{ after(grammarAccess.getCardGameAccess().getGroup_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getRightCurlyBracketKeyword_8_4()); }
	'}'
	{ after(grammarAccess.getCardGameAccess().getRightCurlyBracketKeyword_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardGame__Group_8_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_8_3__0__Impl
	rule__CardGame__Group_8_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getCommaKeyword_8_3_0()); }
	','
	{ after(grammarAccess.getCardGameAccess().getCommaKeyword_8_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardGame__Group_8_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__Group_8_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardGameAccess().getRuleAssignment_8_3_1()); }
	(rule__CardGame__RuleAssignment_8_3_1)
	{ after(grammarAccess.getCardGameAccess().getRuleAssignment_8_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Card__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__0__Impl
	rule__Card__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getCardKeyword_0()); }
	'Card'
	{ after(grammarAccess.getCardAccess().getCardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__1__Impl
	rule__Card__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getNameAssignment_1()); }
	(rule__Card__NameAssignment_1)
	{ after(grammarAccess.getCardAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__2__Impl
	rule__Card__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCardAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__3__Impl
	rule__Card__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getDefinitionAssignment_3()); }
	(rule__Card__DefinitionAssignment_3)
	{ after(grammarAccess.getCardAccess().getDefinitionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__4__Impl
	rule__Card__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getGroup_4()); }
	(rule__Card__Group_4__0)*
	{ after(grammarAccess.getCardAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getRightCurlyBracketKeyword_5()); }
	('}')?
	{ after(grammarAccess.getCardAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Card__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group_4__0__Impl
	rule__Card__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getCardAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getDefinitionAssignment_4_1()); }
	(rule__Card__DefinitionAssignment_4_1)
	{ after(grammarAccess.getCardAccess().getDefinitionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardProperty__Group__0__Impl
	rule__CardProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardPropertyAccess().getTypeAssignment_0()); }
	(rule__CardProperty__TypeAssignment_0)
	{ after(grammarAccess.getCardPropertyAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardPropertyAccess().getGroup_1()); }
	(rule__CardProperty__Group_1__0)?
	{ after(grammarAccess.getCardPropertyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardProperty__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardProperty__Group_1__0__Impl
	rule__CardProperty__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CardProperty__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardPropertyAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getCardPropertyAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardProperty__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CardProperty__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CardProperty__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardPropertyAccess().getValueAssignment_1_1()); }
	(rule__CardProperty__ValueAssignment_1_1)
	{ after(grammarAccess.getCardPropertyAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__0__Impl
	rule__SingleRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getSingleRuleKeyword_0()); }
	'SingleRule'
	{ after(grammarAccess.getSingleRuleAccess().getSingleRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__1__Impl
	rule__SingleRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getNameAssignment_1()); }
	(rule__SingleRule__NameAssignment_1)
	{ after(grammarAccess.getSingleRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__2__Impl
	rule__SingleRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__3__Impl
	rule__SingleRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getRole1Assignment_3()); }
	(rule__SingleRule__Role1Assignment_3)
	{ after(grammarAccess.getSingleRuleAccess().getRole1Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__4__Impl
	rule__SingleRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getNoKeyword_4()); }
	'No.'
	{ after(grammarAccess.getSingleRuleAccess().getNoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__5__Impl
	rule__SingleRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getNumber1Assignment_5()); }
	(rule__SingleRule__Number1Assignment_5)
	{ after(grammarAccess.getSingleRuleAccess().getNumber1Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__6__Impl
	rule__SingleRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getItemAssignment_6()); }
	(rule__SingleRule__ItemAssignment_6)
	{ after(grammarAccess.getSingleRuleAccess().getItemAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__7__Impl
	rule__SingleRule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getKeywordAssignment_7()); }
	(rule__SingleRule__KeywordAssignment_7)
	{ after(grammarAccess.getSingleRuleAccess().getKeywordAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__8__Impl
	rule__SingleRule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getRole2Assignment_8()); }
	(rule__SingleRule__Role2Assignment_8)
	{ after(grammarAccess.getSingleRuleAccess().getRole2Assignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__9__Impl
	rule__SingleRule__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getNoKeyword_9()); }
	'No.'
	{ after(grammarAccess.getSingleRuleAccess().getNoKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__10__Impl
	rule__SingleRule__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getNumber2Assignment_10()); }
	(rule__SingleRule__Number2Assignment_10)?
	{ after(grammarAccess.getSingleRuleAccess().getNumber2Assignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__11__Impl
	rule__SingleRule__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getLevelKeyword_11()); }
	'level'
	{ after(grammarAccess.getSingleRuleAccess().getLevelKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__12__Impl
	rule__SingleRule__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getLevelAssignment_12()); }
	(rule__SingleRule__LevelAssignment_12)
	{ after(grammarAccess.getSingleRuleAccess().getLevelAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_13()); }
	'}'
	{ after(grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__0__Impl
	rule__EqualRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getEqualRuleKeyword_0()); }
	'EqualRule'
	{ after(grammarAccess.getEqualRuleAccess().getEqualRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__1__Impl
	rule__EqualRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getNameAssignment_1()); }
	(rule__EqualRule__NameAssignment_1)
	{ after(grammarAccess.getEqualRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__2__Impl
	rule__EqualRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEqualRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__3__Impl
	rule__EqualRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getComparedCardsNumKeyword_3()); }
	'ComparedCardsNum'
	{ after(grammarAccess.getEqualRuleAccess().getComparedCardsNumKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__4__Impl
	rule__EqualRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getNumberAssignment_4()); }
	(rule__EqualRule__NumberAssignment_4)
	{ after(grammarAccess.getEqualRuleAccess().getNumberAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__5__Impl
	rule__EqualRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getComparedItemKeyword_5()); }
	'ComparedItem'
	{ after(grammarAccess.getEqualRuleAccess().getComparedItemKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__6__Impl
	rule__EqualRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getItemAssignment_6()); }
	(rule__EqualRule__ItemAssignment_6)
	{ after(grammarAccess.getEqualRuleAccess().getItemAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__7__Impl
	rule__EqualRule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getLevelKeyword_7()); }
	'level'
	{ after(grammarAccess.getEqualRuleAccess().getLevelKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__8__Impl
	rule__EqualRule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getLevelAssignment_8()); }
	(rule__EqualRule__LevelAssignment_8)
	{ after(grammarAccess.getEqualRuleAccess().getLevelAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualRule__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualRuleAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getEqualRuleAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CardGame__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardGameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCardGameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__CardpropertytypesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardGameAccess().getCardpropertytypesCardPropertyTypeParserRuleCall_2_2_0()); }
		ruleCardPropertyType
		{ after(grammarAccess.getCardGameAccess().getCardpropertytypesCardPropertyTypeParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__CardpropertytypesAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardGameAccess().getCardpropertytypesCardPropertyTypeParserRuleCall_2_3_1_0()); }
		ruleCardPropertyType
		{ after(grammarAccess.getCardGameAccess().getCardpropertytypesCardPropertyTypeParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__CardsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardGameAccess().getCardsCardParserRuleCall_3_0()); }
		ruleCard
		{ after(grammarAccess.getCardGameAccess().getCardsCardParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__NumberAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardGameAccess().getNumberINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getCardGameAccess().getNumberINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__RuleAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardGameAccess().getRuleGameRuleParserRuleCall_8_2_0()); }
		ruleGameRule
		{ after(grammarAccess.getCardGameAccess().getRuleGameRuleParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardGame__RuleAssignment_8_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardGameAccess().getRuleGameRuleParserRuleCall_8_3_1_0()); }
		ruleGameRule
		{ after(grammarAccess.getCardGameAccess().getRuleGameRuleParserRuleCall_8_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCardAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__DefinitionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardAccess().getDefinitionCardPropertyParserRuleCall_3_0()); }
		ruleCardProperty
		{ after(grammarAccess.getCardAccess().getDefinitionCardPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__DefinitionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardAccess().getDefinitionCardPropertyParserRuleCall_4_1_0()); }
		ruleCardProperty
		{ after(grammarAccess.getCardAccess().getDefinitionCardPropertyParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardProperty__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardPropertyAccess().getTypeCardPropertyTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCardPropertyAccess().getTypeCardPropertyTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCardPropertyAccess().getTypeCardPropertyTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCardPropertyAccess().getTypeCardPropertyTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardProperty__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardPropertyAccess().getValueINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCardPropertyAccess().getValueINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardPropertyType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardPropertyTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getCardPropertyTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSingleRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Role1Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getRole1PlayerRoleEnumRuleCall_3_0()); }
		rulePlayerRole
		{ after(grammarAccess.getSingleRuleAccess().getRole1PlayerRoleEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Number1Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getNumber1INTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getSingleRuleAccess().getNumber1INTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__ItemAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getItemCardPropertyTypeCrossReference_6_0()); }
		(
			{ before(grammarAccess.getSingleRuleAccess().getItemCardPropertyTypeIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSingleRuleAccess().getItemCardPropertyTypeIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getSingleRuleAccess().getItemCardPropertyTypeCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__KeywordAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getKeywordExpressionKeywordEnumRuleCall_7_0()); }
		ruleExpressionKeyword
		{ after(grammarAccess.getSingleRuleAccess().getKeywordExpressionKeywordEnumRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Role2Assignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getRole2PlayerRoleEnumRuleCall_8_0()); }
		rulePlayerRole
		{ after(grammarAccess.getSingleRuleAccess().getRole2PlayerRoleEnumRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Number2Assignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getNumber2INTTerminalRuleCall_10_0()); }
		RULE_INT
		{ after(grammarAccess.getSingleRuleAccess().getNumber2INTTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__LevelAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getLevelINTTerminalRuleCall_12_0()); }
		RULE_INT
		{ after(grammarAccess.getSingleRuleAccess().getLevelINTTerminalRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEqualRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__NumberAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualRuleAccess().getNumberINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getEqualRuleAccess().getNumberINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__ItemAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualRuleAccess().getItemCardPropertyTypeCrossReference_6_0()); }
		(
			{ before(grammarAccess.getEqualRuleAccess().getItemCardPropertyTypeIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEqualRuleAccess().getItemCardPropertyTypeIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getEqualRuleAccess().getItemCardPropertyTypeCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualRule__LevelAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualRuleAccess().getLevelINTTerminalRuleCall_8_0()); }
		RULE_INT
		{ after(grammarAccess.getEqualRuleAccess().getLevelINTTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
