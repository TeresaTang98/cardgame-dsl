/*
 * generated by Xtext 2.24.0
 */
grammar InternalCardGameLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uk.ac.kcl.inf.cardgame.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.cardgame.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uk.ac.kcl.inf.cardgame.services.CardGameLanguageGrammarAccess;

}

@parser::members {

 	private CardGameLanguageGrammarAccess grammarAccess;

    public InternalCardGameLanguageParser(TokenStream input, CardGameLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "CardGame";
   	}

   	@Override
   	protected CardGameLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleCardGame
entryRuleCardGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardGameRule()); }
	iv_ruleCardGame=ruleCardGame
	{ $current=$iv_ruleCardGame.current; }
	EOF;

// Rule CardGame
ruleCardGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Game'
		{
			newLeafNode(otherlv_0, grammarAccess.getCardGameAccess().getGameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCardGameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCardGameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='Properties'
			{
				newLeafNode(otherlv_2, grammarAccess.getCardGameAccess().getPropertiesKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getCardGameAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCardGameAccess().getCardpropertytypesCardPropertyTypeParserRuleCall_2_2_0());
					}
					lv_cardpropertytypes_4_0=ruleCardPropertyType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCardGameRule());
						}
						add(
							$current,
							"cardpropertytypes",
							lv_cardpropertytypes_4_0,
							"uk.ac.kcl.inf.cardgame.CardGameLanguage.CardPropertyType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getCardGameAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCardGameAccess().getCardpropertytypesCardPropertyTypeParserRuleCall_2_3_1_0());
						}
						lv_cardpropertytypes_6_0=ruleCardPropertyType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCardGameRule());
							}
							add(
								$current,
								"cardpropertytypes",
								lv_cardpropertytypes_6_0,
								"uk.ac.kcl.inf.cardgame.CardGameLanguage.CardPropertyType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getCardGameAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCardGameAccess().getCardsCardParserRuleCall_3_0());
				}
				lv_cards_8_0=ruleCard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCardGameRule());
					}
					add(
						$current,
						"cards",
						lv_cards_8_0,
						"uk.ac.kcl.inf.cardgame.CardGameLanguage.Card");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='HoleCardNumber'
		{
			newLeafNode(otherlv_9, grammarAccess.getCardGameAccess().getHoleCardNumberKeyword_4());
		}
		otherlv_10='('
		{
			newLeafNode(otherlv_10, grammarAccess.getCardGameAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				lv_number_11_0=RULE_INT
				{
					newLeafNode(lv_number_11_0, grammarAccess.getCardGameAccess().getNumberINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCardGameRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_11_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getCardGameAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_13='GameRule'
			{
				newLeafNode(otherlv_13, grammarAccess.getCardGameAccess().getGameRuleKeyword_8_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getCardGameAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCardGameAccess().getRuleGameRuleParserRuleCall_8_2_0());
					}
					lv_rule_15_0=ruleGameRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCardGameRule());
						}
						add(
							$current,
							"rule",
							lv_rule_15_0,
							"uk.ac.kcl.inf.cardgame.CardGameLanguage.GameRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getCardGameAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCardGameAccess().getRuleGameRuleParserRuleCall_8_3_1_0());
						}
						lv_rule_17_0=ruleGameRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCardGameRule());
							}
							add(
								$current,
								"rule",
								lv_rule_17_0,
								"uk.ac.kcl.inf.cardgame.CardGameLanguage.GameRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getCardGameAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
	)
;

// Entry rule entryRuleCard
entryRuleCard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardRule()); }
	iv_ruleCard=ruleCard
	{ $current=$iv_ruleCard.current; }
	EOF;

// Rule Card
ruleCard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Card'
		{
			newLeafNode(otherlv_0, grammarAccess.getCardAccess().getCardKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCardAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCardRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCardAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCardAccess().getDefinitionCardPropertyParserRuleCall_3_0());
				}
				lv_definition_3_0=ruleCardProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCardRule());
					}
					add(
						$current,
						"definition",
						lv_definition_3_0,
						"uk.ac.kcl.inf.cardgame.CardGameLanguage.CardProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getCardAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCardAccess().getDefinitionCardPropertyParserRuleCall_4_1_0());
					}
					lv_definition_5_0=ruleCardProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCardRule());
						}
						add(
							$current,
							"definition",
							lv_definition_5_0,
							"uk.ac.kcl.inf.cardgame.CardGameLanguage.CardProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getCardAccess().getRightCurlyBracketKeyword_5());
			}
		)?
	)
;

// Entry rule entryRuleCardProperty
entryRuleCardProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardPropertyRule()); }
	iv_ruleCardProperty=ruleCardProperty
	{ $current=$iv_ruleCardProperty.current; }
	EOF;

// Rule CardProperty
ruleCardProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCardPropertyRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCardPropertyAccess().getTypeCardPropertyTypeCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getCardPropertyAccess().getColonKeyword_1_0());
			}
			(
				(
					lv_value_2_0=RULE_INT
					{
						newLeafNode(lv_value_2_0, grammarAccess.getCardPropertyAccess().getValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCardPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCardPropertyType
entryRuleCardPropertyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardPropertyTypeRule()); }
	iv_ruleCardPropertyType=ruleCardPropertyType
	{ $current=$iv_ruleCardPropertyType.current; }
	EOF;

// Rule CardPropertyType
ruleCardPropertyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getCardPropertyTypeAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCardPropertyTypeRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleGameRule
entryRuleGameRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameRuleRule()); }
	iv_ruleGameRule=ruleGameRule
	{ $current=$iv_ruleGameRule.current; }
	EOF;

// Rule GameRule
ruleGameRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGameRuleAccess().getSingleRuleParserRuleCall_0());
		}
		this_SingleRule_0=ruleSingleRule
		{
			$current = $this_SingleRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGameRuleAccess().getEqualRuleParserRuleCall_1());
		}
		this_EqualRule_1=ruleEqualRule
		{
			$current = $this_EqualRule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingleRule
entryRuleSingleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleRuleRule()); }
	iv_ruleSingleRule=ruleSingleRule
	{ $current=$iv_ruleSingleRule.current; }
	EOF;

// Rule SingleRule
ruleSingleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SingleRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleRuleAccess().getSingleRuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSingleRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleRuleAccess().getRole1PlayerRoleEnumRuleCall_3_0());
				}
				lv_role1_3_0=rulePlayerRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleRuleRule());
					}
					set(
						$current,
						"role1",
						lv_role1_3_0,
						"uk.ac.kcl.inf.cardgame.CardGameLanguage.PlayerRole");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='No.'
		{
			newLeafNode(otherlv_4, grammarAccess.getSingleRuleAccess().getNoKeyword_4());
		}
		(
			(
				lv_number1_5_0=RULE_INT
				{
					newLeafNode(lv_number1_5_0, grammarAccess.getSingleRuleAccess().getNumber1INTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleRuleRule());
					}
					setWithLastConsumed(
						$current,
						"number1",
						lv_number1_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleRuleRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getSingleRuleAccess().getItemCardPropertyTypeCrossReference_6_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleRuleAccess().getKeywordExpressionKeywordEnumRuleCall_7_0());
				}
				lv_keyword_7_0=ruleExpressionKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleRuleRule());
					}
					set(
						$current,
						"keyword",
						lv_keyword_7_0,
						"uk.ac.kcl.inf.cardgame.CardGameLanguage.ExpressionKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleRuleAccess().getRole2PlayerRoleEnumRuleCall_8_0());
				}
				lv_role2_8_0=rulePlayerRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleRuleRule());
					}
					set(
						$current,
						"role2",
						lv_role2_8_0,
						"uk.ac.kcl.inf.cardgame.CardGameLanguage.PlayerRole");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='No.'
		{
			newLeafNode(otherlv_9, grammarAccess.getSingleRuleAccess().getNoKeyword_9());
		}
		(
			(
				lv_number2_10_0=RULE_INT
				{
					newLeafNode(lv_number2_10_0, grammarAccess.getSingleRuleAccess().getNumber2INTTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleRuleRule());
					}
					setWithLastConsumed(
						$current,
						"number2",
						lv_number2_10_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
		otherlv_11='level'
		{
			newLeafNode(otherlv_11, grammarAccess.getSingleRuleAccess().getLevelKeyword_11());
		}
		(
			(
				lv_level_12_0=RULE_INT
				{
					newLeafNode(lv_level_12_0, grammarAccess.getSingleRuleAccess().getLevelINTTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleRuleRule());
					}
					setWithLastConsumed(
						$current,
						"level",
						lv_level_12_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleEqualRule
entryRuleEqualRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualRuleRule()); }
	iv_ruleEqualRule=ruleEqualRule
	{ $current=$iv_ruleEqualRule.current; }
	EOF;

// Rule EqualRule
ruleEqualRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EqualRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getEqualRuleAccess().getEqualRuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEqualRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEqualRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEqualRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ComparedCardsNum'
		{
			newLeafNode(otherlv_3, grammarAccess.getEqualRuleAccess().getComparedCardsNumKeyword_3());
		}
		(
			(
				lv_number_4_0=RULE_INT
				{
					newLeafNode(lv_number_4_0, grammarAccess.getEqualRuleAccess().getNumberINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEqualRuleRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='ComparedItem'
		{
			newLeafNode(otherlv_5, grammarAccess.getEqualRuleAccess().getComparedItemKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEqualRuleRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getEqualRuleAccess().getItemCardPropertyTypeCrossReference_6_0());
				}
			)
		)
		otherlv_7='level'
		{
			newLeafNode(otherlv_7, grammarAccess.getEqualRuleAccess().getLevelKeyword_7());
		}
		(
			(
				lv_level_8_0=RULE_INT
				{
					newLeafNode(lv_level_8_0, grammarAccess.getEqualRuleAccess().getLevelINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEqualRuleRule());
					}
					setWithLastConsumed(
						$current,
						"level",
						lv_level_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getEqualRuleAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Rule ExpressionKeyword
ruleExpressionKeyword returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='isBiggerThan'
			{
				$current = grammarAccess.getExpressionKeywordAccess().getIsBiggerThanEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getExpressionKeywordAccess().getIsBiggerThanEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='isSmallerThan'
			{
				$current = grammarAccess.getExpressionKeywordAccess().getIsSmallerThanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getExpressionKeywordAccess().getIsSmallerThanEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='isEqualTo'
			{
				$current = grammarAccess.getExpressionKeywordAccess().getIsEqualToEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getExpressionKeywordAccess().getIsEqualToEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule PlayerRole
rulePlayerRole returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Player'
			{
				$current = grammarAccess.getPlayerRoleAccess().getPlayerEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPlayerRoleAccess().getPlayerEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Computer'
			{
				$current = grammarAccess.getPlayerRoleAccess().getComputerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPlayerRoleAccess().getComputerEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
